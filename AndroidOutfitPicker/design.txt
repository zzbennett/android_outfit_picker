TODO:
-----

1. Learn how to use git, android and eclipse DONE
	a. set up android project in eclipse DONE
	b. put it in a git repo DONE
	c. set up remote repo in github DONE
	
2. Refresh Android skillz DONE
	a. Do several tutorials
	b. Work more on Go Fish app

Begin Outfit Picker

3. Get the tabs up and running DONE

4. Browse/Edit Wardrobe tab
	a. Make bare bones interface to create a new article of clothing
	b. Figure out how to save the article in the database
	c. Flesh out interface
		i. put in rest of attributes for clothing
		ii. make interface kind of resemble what finished interface will look likeA
	d. Enter in my whole wardrobe
	e. Fix anything that felt awkward when inputing my wardrobe
	
5. Generate outfit tab
	a. Get this to actually generate an outfit
		*0. figure out how to represent fashion rules
			-user needs to be able to override default rules and add their own
			-how to do this??
			-maybe I can come back to this...
		i. figure out which algorithm to use for this (AC3 most likely)
		ii. implement algorithm
		iii. display generated outfit somehow
	b. Flesh out user interface
		i. design first view, before any outfits are generated
			-need to be able to specify weather and formalness
		ii. design second view, with outfit generated
			-be able to change weather and formalness? Or maybe user just uses back button
		iii. make button that will generate outfit after outfit
		iv. make a 'wear it!' button, store outfit in list of recently worn outfits
		
6. Laundry Feature
	a. display all recently worn outfits OR
	a. display clothes in order of how many times they've been worn
	b. display all dirty clothes in laundry
	c. make user interface for putting outfits in the laundry
		i. user clicks a button like, 'put clothes in laundry'
		ii. user can check off clothes that are dirty.
		iii. user clicks 'done' button and all clothes go in the laundry
	d. make interface for taking clothes out of the laundry
		i. similar to putting clothes in dirty laundry, only instead of
		viewing the list of recent outfits, the user sees a list of clothes
		in the laundry

7. Edit fashion rules
	a. Maybe user can just specify specific articles of clothing that shouldn't
	   ever be in the same outfit?
	b. Allow user to select from a few different fashion options, i.e. 
		-preferences for dark colors vs. light colors
		-preferences for patterns vs. solids
		*this way I can pre program the fashion options and I don't have to 
		make some interface for the user to input arbitrary fashion rules


FEATURES:
---------
-generate outfits
	*allow user to easily generate outfit after outfit if they are displeased
	with the suggestions
	*have app 'learn' which outfits the user prefers
		**neural network? k nearest neighbors?? not sure about this yet
-base outfits on weather
	*automatically get weather information from online somewhere?
	*have user input weather themselves
-user can indicate how formal they want the outfit to be
-user can indicate when clothes are dirty
-user can easily mark off which clothes are now clean after doing laundry
-user can input their own fashion rules, should they choose (have default rules too)
-user can easily input what articles of clothing they have
	*enter in description of clothing
	*chose attributes from drop down lists
	*optionally add photo?
-user can easily browse through their clothing by type of article 
 and remove items they no longer have
-user's wardrobe is stored in android's internal sqlite database


REPESENTATION OF CLOTHING:
--------------------------
-attributes are:
	*clothing id (for primary key)
	*description
	*article type
	*color 1
	*color 2
	*color 3
	*color 4
	*color 5
	*fabric 1
	*fabric 2
	*pattern
	*formalness
	*volume
	*weather appropriateness
	*times worn? for laundry feature
	

DESIGN FEATURES:
----------------
-Tabs on top of app differentiate functionality
-Default tab is the one for generating an outfit
-Unless wardrobe is empty, then it's the tab for entering clothes
-Tabs will be:
	*Generate Outfit
	*Browse/Edit Wardrobe
	*Edit Style (change fashion rules)
	*Laundry (mark off which clothes are clean now)
	
-Generate Outfit tab:
	*Drop down indicating how hot/cold the weather is going to be
	*Drop down indicating how formal the outfit should be
	*Big button to generate outfit
		*Goes to new screen
		*shows outfit
		*big button to generate another outfit
		*button to say 'wear this outfit!'
			**this increments times worn for all articles, ask user if clothes are dirty?
		*learn which outfits user likes and dislikes
			*maybe do manhattan distance, the more similar two outfits are to each other,
			 the closer they are. If an outfit is close to one the user didn't like before,
			 don't pick outfits that are really similar?
-Browse/Edit wardrobe tab:
	*Button to add new clothing
	*Be able to select an article and remove from wardrobe
	*Browse by article of clothing
-Laundry tab:
	*Show recent outfits
		*selecting and holding an article will give the option to remove from wardrobe
		 or add to dirty clothes (if in clean clothes; if in dirty clothes, it shows
		 adding to clean clothes).
	*Show all dirty clothes
		*be able to select multiple at once and mark selected as clean
-Edit style:
	*Show default fashion rules
	*Be able to remove and add new ones
	*This feature is going to need some thought...
		
-Article of clothing data structure:
	*needs some display callback method so that whenever an article
	of clothing is listed, it looks the same and has the same functionality (i.e
	remove, add to laundry, etc.)
	*all attributes retrieved from database on creation
		
		
		
	